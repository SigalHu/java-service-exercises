<?xml version="1.0" encoding="UTF-8"?>
<!--在使用xml时，需要在配置文件的顶部声明多个xml模式（xsd）文件，这些文件定义了配置Spring的xml元素-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--启用组件扫描-->
    <context:component-scan base-package="com.sigalhu.jse.spring.soundsystem.scan">
        <context:exclude-filter type="annotation" expression="org.springframework.context.annotation.Configuration"/>
    </context:component-scan>

    <!--通过id属性为bean设置名字，通过class属性来指定创建bean，要使用全限定的类名-->
    <!--在xml配置中，bean的创建显得更加被动，在JavaConfig配置方式中，可以通过任何可以想象到的方法来创建bean-->
    <!--另外，Spring的xml配置并不能从编译期的类型检查中受益-->
    <bean id="sgtPeppers" class="com.sigalhu.jse.spring.soundsystem.xml.SgtPeppers"/>

    <bean id="cdPlayer" class="com.sigalhu.jse.spring.soundsystem.xml.CDPlayer">
        <!--该元素会告知Spring要将一个id为compactDisc的bean引用传递到CDPlayer的构造器中-->
        <constructor-arg ref="blankDisc"/>
    </bean>

    <bean id="blankDisc" class="com.sigalhu.jse.spring.soundsystem.xml.BlankDisc">
        <!--value属性表明给定的值要以字面量的形式注入到构造器之中-->
        <constructor-arg value="Sgt. Pepper's Lonely Hearts Club Band"/>
        <constructor-arg value="The Beatles"/>
        <!--<null/>元素将null传递给构造器-->
        <!--<constructor-arg><null/></constructor-arg>-->
        <constructor-arg>
            <!--<list>元素表明一个包含值的列表将会传递到构造器中-->
            <list>
                <!--<value>元素用来指定列表中的每个元素，也可以使用<ref>元素实现bean引用列表的装配-->
                <value>Sgt. Pepper's Lonely Hearts Club Band</value>
                <value>With a Little Help from My Friends</value>
                <value>Lucy in the Sky with Diamonds</value>
                <value>Getting Better</value>
                <value>Fixing a Hole</value>
            </list>
        </constructor-arg>
    </bean>

    <bean id="beatlesDiscography" class="com.sigalhu.jse.spring.soundsystem.xml.Discography">
        <constructor-arg value="The Beatles"/>
        <constructor-arg>
            <!--<list>或<set>都可以用来装配List、Set甚至数组，如果是Set的话，所有重复的值都会被忽略掉，存放顺序也不会得以保证-->
            <set>
                <ref bean="sgtPeppers"/>
                <ref bean="blankDisc"/>
            </set>
        </constructor-arg>
    </bean>

    <bean id="anotherCDPlayer" class="com.sigalhu.jse.spring.soundsystem.xml.CDPlayer">
        <!--<property>元素为属性的Setter方法所提供的功能与<constructor-arg>元素为构造器所提供的功能是一样的-->
        <property name="cd" ref="reallyBlankDisc"/>
    </bean>

    <bean id="reallyBlankDisc" class="com.sigalhu.jse.spring.soundsystem.xml.BlankDisc">
        <property name="title" value="Sgt. Pepper's Lonely Hearts Club Band"/>
        <property name="artist" value="Really Beatles"/>
        <property name="tracks">
            <list>
                <value>Sgt. Pepper's Lonely Hearts Club Band</value>
                <value>With a Little Help from My Friends</value>
                <value>Lucy in the Sky with Diamonds</value>
                <value>Getting Better</value>
                <value>Fixing a Hole</value>
            </list>
        </property>
    </bean>
</beans>